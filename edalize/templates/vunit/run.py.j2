# Auto generated by Edalize

from {{ vunit_runner_name }} import VUnitRunner

runner = VUnitRunner('{{ work_root }}')

# Override this hook to allow custom creation configuration of the VUnit instance:
vu = runner.create()

{% for extlib in add_libraries %}
vu.add_{{ extlib }}()
{% endfor %}


{% for library, src_files in libraries.items() %}
lib = vu.add_library("{{ library }}")
src_files = []
{% for src_file in src_files if src_file|src_file_filter %}
lib.add_source_files("{{ src_file|src_file_filter }}")
src_files.append("{{ src_file|src_file_filter }}")
{% endfor %}
# Override this hook to customize the library, e.g. compile-flags etc.
# This allows full access to vunit.ui.Library interface:
runner.handle_library("{{ library }}", lib, src_files)
{% endfor %}

# override this hook to perform final customization and parametrization of VUnit, custom invokation, etc.
runner.main(vu)
